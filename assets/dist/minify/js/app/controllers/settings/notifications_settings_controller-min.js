(function(){app.controller("notificationsSettingController",["$rootScope","$scope","$state","settingsService","message","discardChange","userModel","dbEnums","roleValidators",function(e,t,n,s,o,i,a,c,g){function r(){t.dropdowns={tasks:!0,projects:!0}}function d(){t.settings=s.getSettings(),i.savePrevious(t,t.settings)}t.emailChangeDisabled=!0,t.toggleDropdown=function(e){t.dropdowns[e]=!t.dropdowns[e]},t.save=function(){i.isChanged(t.settings)?s.update(t.settings).then(function(){e.$emit("toast-message",o.successMessages.SETTINGS_SAVED),i.updateDiscardedBeforeSave(),n.go("/settings")}):(i.updateDiscardedBeforeSave(),n.go("/settings"))},t.start=function(){var n=a.getLoggedInUser();t.title="Notifications",d(),r(),e.$emit("basic:header",null,null,t,!0,null,!0),g.checkUserRole(n,c.USER_ROLES.EMAIL_NOTIFICATIONS,{},!1).then(function(){t.emailChangeDisabled=!1},function(e){"LICENSE"==e.key})},t.start();var l=e.$on("settings-update",function(){d()});t.$on("$destroy",l),t.$on("$stateChangeStart",function(e,n,s){i.changeState(e,n,s,t.settings)}),t.emailClick=function(e){if(t.emailChangeDisabled){var n=a.getLoggedInUser();g.checkUserRole(n,c.USER_ROLES.EMAIL_NOTIFICATIONS,{},!0)}}}])}).call(this);