(function(){app.service("socket",["$rootScope","$state","dbEnums","toastService","labelService","CONSTANT","taskService","project","userModel","notificationModel","filterService","settingsService","message","$window","taskModel",function(e,t,n,o,s,c,a,i,d,u,l,r,f,p,m){var k,g=this;g.connect=function(){k=io.connect(c.api_link,{forceNew:!0,query:"userId="+d.getLoggedInId()}),g.enableAllListeners()},g.disconnect=function(){k&&k.disconnect()},g.enableAllListeners=function(){k.on("connect",function(){p.localStorage.setItem("socketInfo",JSON.stringify({id:k.id})),console.log(k)}),k.on("disconnect",function(){p.localStorage.removeItem("socketInfo")}),k.on(g.socketEventNames.user.userUpdated,function(e){d.addOrUpdate(e,function(){})}),k.on(g.socketEventNames.user.userSessionTimeOut,function(t){d.setRequestLoginEmail(t.email),e.$emit("logout",null,null),e.$emit("toast-message",f.successMessages.PASSWORD_UPDATED)}),k.on(g.socketEventNames.project.projectUpdated,function(e){i.updateItem(e)}),k.on(g.socketEventNames.project.projectDeleted,function(e){console.log(e.name),e.status=n.status.deleted,i.updateItem(e)}),k.on(g.socketEventNames.project.projectLeft,function(e){e.status=n.status.deleted,i.updateItem(e)}),k.on(g.socketEventNames.task.taskUpdated,function(e){a.updateItem(e)}),k.on(g.socketEventNames.task.taskCompleted,function(t){console.log("Completed"),a.updateItem(t),e.$emit("task-complete")}),k.on(g.socketEventNames.label.labelUpdated,function(e){s.updateItem(e)}),k.on(g.socketEventNames.filter.filterUpdated,function(e){l.updateItem(e)}),k.on(g.socketEventNames.settings.settingsUpdated,function(e){r.updateItem(e)}),k.on(g.socketEventNames.notification.foreground,function(e,t,n){o.openNotificationToast(e,t,n)}),k.on(g.socketEventNames.notification.notify,function(e){u.addOrUpdate(e,function(){})}),k.on(g.socketEventNames.notification.seen,function(){u.bulkSeen(function(){})}),k.on(g.socketEventNames.user.taskOrderChanged,function(e){d.changeTaskSortOrder(e,function(){})}),k.on(g.socketEventNames.task.taskDeleted,function(e){m.delete(e.id)})},g.socketEventNames={user:{userUpdated:"user:updated",userSessionTimeOut:"user:sessionTimeOut",taskOrderChanged:"user:taskOrderChanged"},project:{projectUpdated:"project:updated",projectDeleted:"project:deleted",projectLeft:"project:left"},label:{labelUpdated:"label:updated",labelDeleted:"label:deleted"},filter:{filterUpdated:"filter:updated",filterDeleted:"filter:deleted"},task:{taskUpdated:"task:updated",taskCompleted:"task:completed",taskDeleted:"task:deleted"},settings:{settingsUpdated:"settings:updated"},notification:{foreground:"foreground-push-notification",notify:"notify",seen:"seen"}},g.getClientId=function(){return k.id},e.$on("connect-socket",function(){d.isAuthenticated()&&g.connect()}),e.$on("disconnect-socket",function(){g.disconnect()})}])}).call(this);